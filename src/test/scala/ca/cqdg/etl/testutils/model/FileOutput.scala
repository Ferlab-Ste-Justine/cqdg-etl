/**
 * Generated by [[bio.ferlab.datalake.spark3.ClassGenerator]]
 * on 2021-05-18T16:19:35.414123
 */
package ca.cqdg.etl.testutils.model


case class FileOutput(`data_access`: String = "Controled",
                      `data_category`: String = "Simple nucleotide variation",
                      `data_type`: String = "Raw SNV calls",
                      `diagnoses`: List[DIAGNOSES] = List(DIAGNOSES()),
                      `donors`: List[DONORS] = List(DONORS()),
                      `experimental_strategy`: String = "WGS",
                      `file_format`: String = "gvcf",
                      `file_name`: String = "8K5T070.gvcf",
                      `file_name_keyword`: String = "8K5T070.gvcf",
                      `file_name_ngrams`: String = "8K5T070.gvcf",
                      `file_size`: Double = 13.02056279174796,
                      `file_variant_class`: String = "Germline",
                      `is_harmonized`: Boolean = true,
                      `phenotypes`: List[PHENOTYPES] = List(PHENOTYPES()),
                      `platform`: String = "Illumina",
                      `study`: List[STUDY] = List(STUDY()))

case class DONORS(`age_at_recruitment`: String = "43",
                  `age_of_death`: Long = 18980,
                  `cause_of_death`: String = "Accidental death",
                  `date_of_recruitment`: String = "7/23/2009",
                  `dob`: String = "1/27/1965",
                  `environment_exposure_available`: String = "NO",
                  `ethnicity`: String = "French Canadian ",
                  `exposures`: List[EXPOSURE] = List(EXPOSURE()),
                  `familyConditions`: List[FAMILYCONDITIONS] = List(FAMILYCONDITIONS()),
                  `family_history_available`: String = "NO",
                  `gender`: String = "Male",
                  `genealogy_available`: String = "NO",
                  `is_a_proband`: String = "Not applicable",
                  `is_affected`: String = "Not applicable",
                  `laboratory_measures_available`: String = "NO",
                  `lifestyle_available`: String = "YES",
                  `medication_available`: String = "NO",
                  `physical_measures_available`: String = "NO",
                  `study_id`: String = "ST0001",
                  `submitter_donor_id`: String = "PT00173",
                  `vital_status`: String = "deceased")

case class DIAGNOSES(`age_at_diagnosis`: Long = 37,
                     `diagnosis_type`: String = "Clinical",
                     `is_cancer`: Boolean = false,
                     `is_self_reported`: String = "Yes",
                     `submitter_diagnosis_id`: String = "DI00173",
                     `treatments`: List[TREATMENTS] = List(TREATMENTS()))
