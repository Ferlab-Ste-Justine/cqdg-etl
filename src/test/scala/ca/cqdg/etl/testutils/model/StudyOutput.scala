/**
 * Generated by [[bio.ferlab.datalake.spark3.ClassGenerator]]
 * on 2021-05-18T16:19:34.544138
 */
package ca.cqdg.etl.testutils.model


case class StudyOutput(`description`: String = "population-based cohort focusing on complex conditions",
                       `domain`: String = "General Health",
                       `donors`: List[STUDY_DONORS] = List(STUDY_DONORS()),
                       `files`: List[STUDY_FILES] = List(STUDY_FILES()),
                       `keyword`: String = "Common chronic disorders; Prospective cohort; Reference genome",
                       `name`: String = "Study1",
                       `population`: String = "Adult",
                       `short_name`: String = "ST1",
                       `short_name_keyword`: String = "ST1",
                       `short_name_ngrams`: String = "ST1",
                       `study_id_keyword`: String = "ST0001")

case class STUDY_DONORS(`age_at_recruitment`: String = "62",
                        `age_of_death`: Option[Long] = None,
                        `cause_of_death`: Option[String] = None,
                        `date_of_recruitment`: String = "8/19/2008",
                        `diagnosis_per_donor_per_study`: List[DIAGNOSIS_PER_DONOR_PER_STUDY] = List(DIAGNOSIS_PER_DONOR_PER_STUDY()),
                        `dob`: String = "6/7/1947",
                        `environment_exposure_available`: String = "NO",
                        `ethnicity`: String = "European",
                        `exposures`: List[EXPOSURE] = List(EXPOSURE()),
                        `familyConditions`: List[FAMILYCONDITIONS] = List(FAMILYCONDITIONS()),
                        `family_history_available`: String = "YES",
                        `gender`: String = "Female",
                        `genealogy_available`: String = "NO",
                        `is_a_proband`: String = "Not applicable",
                        `is_affected`: String = "Not applicable",
                        `laboratory_measures_available`: String = "NO",
                        `lifestyle_available`: String = "NO",
                        `medication_available`: String = "NO",
                        `phenotypes`: List[PHENOTYPES] = List(PHENOTYPES()),
                        `physical_measures_available`: String = "NO",
                        `submitter_donor_id`: String = "PT00134",
                        `vital_status`: String = "alive")

case class STUDY_FOLLOW_UPS(`days_to_follow_up`: Long = 65,
                            `disease_status_at_followup`: String = "Partial remission ",
                            `relapse_interval`: Option[Long] = None,
                            `submitter_follow_up_id`: String = "FU00134")

case class STUDY_FILES(`biospecimen`: List[BIOSPECIMEN] = List(BIOSPECIMEN()),
                       `data_access`: String = "Controled",
                       `data_category`: String = "Sequencing reads",
                       `data_type`: String = "Aligned reads",
                       `experimental_strategy`: String = "WGS",
                       `file_format`: String = "cram",
                       `file_name`: String = "8o01J00.cram",
                       `is_harmonized`: Boolean = true,
                       `platform`: String = "Illumina",
                       `study_id`: String = "ST0001",
                       `submitter_donor_id`: String = "PT00173",
                       `variant_class`: Option[String] = None)

case class BIOSPECIMEN(`anatomic_location`: String = "C42.0: Blood",
                       `biospecimen_access`: String = "Yes",
                       `biospecimen_processing`: String = "Cryopreservation - other",
                       `biospecimen_storage`: String = "Frozen in -70 freezer",
                       `date_biospecimen_collection`: String = "1/9/2009",
                       `samples`: List[SAMPLES] = List(SAMPLES()),
                       `submitter_biospecimen_id`: String = "BS00002",
                       `submitter_diagnosis_id`: String = "DI00002",
                       `tissue_source`: String = "Blood derived - peripheral blood",
                       `type`: String = "Normal")

case class FAMILYCONDITIONS(`family_cancer_history`: String = "Yes",
                            `family_condition_age`: Long = 53,
                            `family_condition_name`: String = "Lung cancer",
                            `family_condition_relationship`: String = "paternal aunt",
                            `submitter_family_condition_id`: String = "FC00134")

case class TREATMENTS(`submitter_treatment_id`: String = "TX00134",
                      `treatment_intent`: String = "Unknown",
                      `treatment_is_primary`: String = "Unknown",
                      `treatment_response`: String = "Partial Response",
                      `treatment_type`: String = "Stem cell transplant")

case class PHENOTYPES(
                       `id`: String = "HP:0001513",
                       `name`: String = "Obesity",
                       `parents`: Seq[String] = Seq("Increased body weight HP:0004324"),
                       `age_at_phenotype`: Int = 54,  //FIXME error - Should be a Set of Int (fix next PR)
                       `phenotype_observed_bool`: Boolean = true,
                       `is_leaf`: Boolean = false,
                       `is_tagged`: Boolean = false
                     )

case class DIAGNOSIS_PER_DONOR_PER_STUDY(`age_at_diagnosis`: Long = 56,
                                         `diagnosis_source_text`: Option[String] = None,
                                         `diagnosis_type`: String = "Clinical",
                                         `follow_ups`: List[STUDY_FOLLOW_UPS] = List(STUDY_FOLLOW_UPS()),
                                         `is_cancer`: Boolean = true,
                                         `is_cancer_primary`: String = "Yes",
                                         `is_self_reported`: String = "Yes",
                                         `m_category`: Option[String] = None,
                                         `n_category`: Option[String] = None,
                                         `stage_group`: String = "stage 1a',",
                                         `submitter_diagnosis_id`: String = "DI00134",
                                         `t_category`: Option[String] = None,
                                         `treatments`: List[TREATMENTS] = List(TREATMENTS()))

case class SAMPLES(`submitter_sample_id`: String = "SA00002")
