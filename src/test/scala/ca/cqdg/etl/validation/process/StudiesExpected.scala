/**
 * Generated by [[ca.cqdg.etl.processes.ClassGenerator]]
 * on 2021-08-25T16:34:04.681030
 */
package ca.cqdg.etl.validation.process


case class StudiesExpected(`study_id`: String = "ST0001",
                           `name`: String = "Study1",
                           `short_name`: String = "ST1",
                           `description`: String = "population-based cohort focusing on complex conditions",
                           `keyword`: String = "Common chronic disorders; Prospective cohort; Reference genome",
                           `access_authority`: String = "www.study1.ca",
                           `domain`: String = "General Health",
                           `population`: String = "Adult",
                           `internal_study_id`: String = "study_internal_id_1",
                           `dictionary_version`: String = "5.58",
                           `study_version`: String = "1.0",
                           `study_version_creation_date`: String = "2020/07/01",
                           `data_access_codes`: DATA_ACCESS_CODES = DATA_ACCESS_CODES(),
                           `study_id_keyword`: String = "ST0001",
                           `short_name_keyword`: String = "ST1",
                           `donors`: List[DONORS] = List(DONORS()),
                           `files`: List[FILES] = List(FILES()),
                           `summary`: SUMMARY = SUMMARY())

case class DATA_CATEGORY(`key`: String = "Simple nucleotide variation",
                         `donors`: Long = 1,
                         `files`: Long = 1)

case class DATA_ACCESS_CODES(`access_limitations`: String = "obsolete general research use and clinical care (DUO:0000005)",
                             `access_requirements`: List[String] = List("user specific restriction (DUO:0000026)", "publication moratorium (DUO:0000024)", "data use modifier (DUO:0000017)"))

case class DONORS(`submitter_donor_id`: String = "PT00001",
                  `dob`: String = "6/9/1946",
                  `date_of_recruitment`: String = "11/22/2009",
                  `gender`: String = "Male",
                  `ethnicity`: String = "French Canadian",
                  `vital_status`: String = "alive",
                  `cause_of_death`: Option[String] = None,
                  `age_of_death`: Option[String] = None,
                  `physical_measures_available`: String = "TRUE",
                  `laboratory_measures_available`: String = "FALSE",
                  `lifestyle_available`: String = "TRUE",
                  `medication_available`: String = "TRUE",
                  `environment_exposure_available`: String = "FALSE",
                  `family_history_available`: String = "TRUE",
                  `genealogy_available`: String = "FALSE",
                  `is_a_proband`: String = "Not applicable",
                  `is_affected`: String = "Not applicable",
                  `internal_donor_id`: String = "donor_internal_id_1",
                  `familyRelationships`: List[FAMILYRELATIONSHIPS] = List(FAMILYRELATIONSHIPS()),
                  `familyConditions`: List[FAMILYCONDITIONS] = List(FAMILYCONDITIONS()),
                  `exposures`: List[EXPOSURES] = List(EXPOSURES()),
                  `age_at_recruitment`: String = "64",
                  `diagnoses`: List[DIAGNOSES] = List(DIAGNOSES()),
                  `mondo`: List[MONDO] = List(MONDO()),
                  `icd`: List[ICD] = List(ICD()),
                  `observed_phenotype_tagged`: List[OBSERVED_PHENOTYPE_TAGGED] = List(OBSERVED_PHENOTYPE_TAGGED()),
                  `not_observed_phenotype_tagged`: List[NOT_OBSERVED_PHENOTYPE_TAGGED] = null)

case class NOT_OBSERVED_PHENOTYPE_TAGGED()

case class MONDO(`phenotype_id`: String = "MONDO:0005068",
                 `name`: String = "myocardial infarction (disease)",
                 `display_name`: String = "myocardial infarction (disease) (MONDO:0005068)",
                 `parents`: List[String] = List("myocardial disorder (MONDO:0024643)"),
                 `age_at_event`: List[String] = List("54"),
                 `internal_diagnosis_id`: String = "diagnosis_internal_id_1",
                 `is_leaf`: Boolean = false,
                 `is_tagged`: Boolean = true)


case class ICD(`phenotype_id`: String = "I21",
               `name`: String = "Acute myocardial infarction",
               `display_name`: String = "Acute myocardial infarction (I21)",
               `parents`: List[String] = List("Ischemic heart diseases (I20-I25)"),
               `age_at_event`: List[String] = List("54"),
               `internal_diagnosis_id`: String = "diagnosis_internal_id_1",
               `is_leaf`: Boolean = false,
               `is_tagged`: Boolean = true)

case class CLINICAL_DATA_AVAILABLE(`key`: String = "diagnosis",
                                   `donors`: Long = 1)

case class DIAGNOSES(`submitter_diagnosis_id`: String = "DI00001",
                     `diagnosis_source_text`: String = "Heart attack",
                     `diagnosis_ICD_code`: String = "I21",
                     `diagnosis_mondo_code`: String = "MONDO:0005068",
                     `age_at_diagnosis`: String = "54",
                     `is_self_reported`: String = "TRUE",
                     `is_cancer`: String = "FALSE",
                     `is_cancer_primary`: Option[String] = None,
                     `diagnosis_type`: String = "Clinical",
                     `tumor_staging_system`: Option[String] = None,
                     `stage_group`: Option[String] = None,
                     `t_category`: Option[String] = None,
                     `n_category`: Option[String] = None,
                     `m_category`: Option[String] = None,
                     `internal_diagnosis_id`: String = "diagnosis_internal_id_1",
                     `tagged_mondo`: TAGGED_MONDO = TAGGED_MONDO(),
                     `tagged_icd`: TAGGED_ICD = TAGGED_ICD(),
                     `treatments`: List[TREATMENTS] = List(TREATMENTS()),
                     `follow_ups`: List[FOLLOW_UPS] = List(FOLLOW_UPS()))

case class OBSERVED_PHENOTYPE_TAGGED(`phenotype_id`: String = "HP:0001658",
                                     `name`: String = "Myocardial infarction",
                                     `parents`: List[String] = List("Abnormal cardiovascular system physiology (HP:0011025)"),
                                     `display_name`: String = "Myocardial infarction (HP:0001658)",
                                     `main_category`: String = "Abnormality of the cardiovascular system (HP:0001626)",
                                     `is_leaf`: Boolean = true,
                                     `is_tagged`: Boolean = true,
                                     `internal_phenotype_id`: String = "phenotype_internal_id_1",
                                     `age_at_event`: List[String] = List("63"))

case class FOLLOW_UPS(`submitter_follow_up_id`: String = "FU00001",
                      `disease_status_at_followup`: String = "No evidence of disease",
                      `relapse_interval`: Option[String] = None,
                      `internal_followup_id`: String = "follow_up_internal_id_1")

case class FILES(`submitter_donor_id`: String = "PT00001",
                 `study_id`: String = "ST0001",
                 `data_category`: String = "Simple nucleotide variation",
                 `data_type`: String = "Raw SNV calls",
                 `is_harmonized`: String = "TRUE",
                 `experimental_strategy`: String = "WGS",
                 `data_access`: String = "Controled",
                 `file_format`: String = "gvcf",
                 `platform`: String = "Illumina",
                 `variant_class`: String = "Germline",
                 `internal_file_id`: String = "file_internal_id_1",
                 `file_size`: Double = 11.74950191037482,
                 `biospecimen`: List[BIOSPECIMEN] = List(BIOSPECIMEN()))

case class BIOSPECIMEN(`submitter_biospecimen_id`: String = "BS00001",
                       `submitter_diagnosis_id`: String = "DI00001",
                       `date_biospecimen_collection`: String = "11/22/2009",
                       `tumor_normal_designation`: String = "Normal",
                       `tumor_histological_type`: Option[String] = None,
                       `biospecimen_processing`: String = "Cryopreservation - other",
                       `biospecimen_storage`: String = "Frozen in -70 freezer",
                       `biospecimen_access`: String = "TRUE",
                       `internal_biospecimen_id`: String = "biospecimen_internal_id_1",
                       `tissue_source`: String = "Blood derived - peripheral blood",
                       `type`: String = "Normal",
                       `anatomic_location`: String = "C42.0",
                       `samples`: List[SAMPLES] = List(SAMPLES()))

case class FAMILYCONDITIONS(`submitter_family_condition_id`: String = "FC00001",
                            `family_condition_name`: String = "Brain cancer",
                            `family_condition_age`: String = "20",
                            `family_condition_relationship`: String = "granddaughter",
                            `family_cancer_history`: String = "Yes",
                            `internal_familyhistory_id`: String = "family_history_internal_id_1")

case class TREATMENTS(`submitter_treatment_id`: String = "TX00001",
                      `treatment_type`: String = "Surgery",
                      `treatment_is_primary`: String = "Yes",
                      `treatment_intent`: String = "Curative",
                      `treatment_response`: String = "Not applicable",
                      `medication_name`: Option[String] = None,
                      `medication_code`: Option[String] = None,
                      `medication_class`: Option[String] = None,
                      `treatment_end_date`: Option[String] = None,
                      `internal_treatment_id`: String = "treatment_internal_id_1")

case class TAGGED_ICD(`phenotype_id`: String = "I21",
                      `name`: String = "Acute myocardial infarction",
                      `parents`: List[String] = List("Ischemic heart diseases (I20-I25)"),
                      `display_name`: String = "Acute myocardial infarction (I21)",
                      `main_category`: String = "Ischemic heart diseases (I20-I25)",
                      `age_at_event`: List[String] = List("54"),
                      `is_leaf`: Boolean = false,
                      `is_tagged`: Boolean = true,
                      `internal_diagnosis_id`: String = "diagnosis_internal_id_1")

case class EXPOSURES(`smoking_status`: String = "Never smoker",
                     `smoking_pack_years`: Option[String] = None,
                     `alcohol_status`: String = "No alcohol consumtion",
                     `FSA`: String = "J7C",
                     `internal_exposure_id`: String = "exposure_internal_id_1")

case class SUMMARY(`data_category`: List[DATA_CATEGORY] = List(DATA_CATEGORY()),
                   `experimental_strategy`: List[EXPERIMENTAL_STRATEGY] = List(EXPERIMENTAL_STRATEGY()),
                   `clinical_data_available`: List[CLINICAL_DATA_AVAILABLE] = List(CLINICAL_DATA_AVAILABLE()))

case class EXPERIMENTAL_STRATEGY(`key`: String = "WGS",
                                 `donors`: Long = 1,
                                 `files`: Long = 1)

case class TAGGED_MONDO(`phenotype_id`: String = "MONDO:0005068",
                        `name`: String = "myocardial infarction (disease)",
                        `parents`: List[String] = List("myocardial disorder (MONDO:0024643)"),
                        `display_name`: String = "myocardial infarction (disease) (MONDO:0005068)",
                        `main_category`: String = "disease by anatomical system (MONDO:0021199)",
                        `age_at_event`: List[String] = List("54"),
                        `is_leaf`: Boolean = false,
                        `is_tagged`: Boolean = true,
                        `internal_diagnosis_id`: String = "diagnosis_internal_id_1")

case class FAMILYRELATIONSHIPS(`submitter_family_id`: String = "FA0001",
                               `submitter_donor_id`: String = "PT00001",
                               `family_type`: String = "Case-parent trio",
                               `relationship_to_proband`: String = "Is the proband",
                               `internal_family_id`: String = "family_internal_id_1")

case class SAMPLES(`submitter_sample_id`: String = "SA00001",
                   `sample_type`: String = "Total DNA",
                   `internal_sampleregistration_id`: String = "sample_registration_internal_id_1")
